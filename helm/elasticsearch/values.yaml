clusterName: "elasticsearch"
nodeGroup: "master"

# The service that non master groups will try to connect to when joining the cluster
# This should be set to clusterName + "-" + nodeGroup for your master group
masterService: "elasticsearch-master"

# Elasticsearch roles that will be applied to this nodeGroup
# These will be set as environment variables. E.g. node.master=true
roles:
  master: "true"
  ingest: "true"
  data: "true"

replicas: 3
minimumMasterNodes: 2
maxUnavailable: 1

# Extra environment variables to append to this nodeGroup
# This will be appended to the current 'env:' key. You can use any of the kubernetes env
# syntax here
# extraEnvs:
# - name: opendistro_security.ssl.http.enabled
#   value: "false"

# A list of secrets and their paths to mount inside the pod
# This is useful for mounting certificates for security and for mounting
# the X-Pack license
# secretMounts: 
#  - name: elastic-certificates
#    secretName: elastic-certificates
#    path: /usr/share/elasticsearch/config/certs

image: "docker.elastic.co/elasticsearch/elasticsearch-oss"
imageTag: "6.7.1"

# image: "amazon/opendistro-for-elasticsearch"
# imageTag: "0.8.0"
imagePullPolicy: "IfNotPresent"

resources:
  requests:
    cpu: "100m"
    memory: "8Gi"
  limits:
    cpu: "4000m"
    memory: "12Gi"

esJavaOpts: "-Xmx8g -Xms8g"

networkHost: "0.0.0.0"

persistence:
  annotations: {}

volumeClaimTemplate:
  accessModes: [ "ReadWriteOnce" ]
  storageClassName: "default"
  resources:
    requests:
      storage: 500Gi

antiAffinity: "hard"
antiAffinityTopologyKey: "kubernetes.io/hostname" 
podManagementPolicy: "Parallel"

protocol: http
httpPort: 9200
transportPort: 9300

updateStrategy: RollingUpdate
terminationGracePeriod: 120
sysctlVmMaxMapCount: 262144

fsGroup: 1000

readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 3
  timeoutSeconds: 5

imagePullSecrets: []
nodeSelector: {}
tolerations: []

# esConfig:
#   elasticsearch.yml: |
#     opendistro_security.disabled: true

ingress:
  enabled: false
  annotations:
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
  path: /
  hosts:
  - elasticsearch.example.com
  tls:
  - secretName: elasticsearch-tls
    hosts:
    - elasticsearch.example.com
